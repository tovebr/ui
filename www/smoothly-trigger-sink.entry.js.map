{"file":"smoothly-trigger-sink.entry.esm.js","mappings":";;;;AAAA,MAAM,QAAQ,GAAG,6FAA6F;;MCEjG,mBAAmB;;;;EAC9B,IAAI,OAAO;IACT,IAAI,CAAC,IAAI,CAAC,YAAY;MACpB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC;IAChE,OAAO,IAAI,CAAC,YAAY,CAAC;GAC1B;EACD,eAAe,CAAC,KAAK;IACnB,IAAI,OAAO,CAAC,EAAE,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,IAAI,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE;MAC9E,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,KAAK,CAAC,MAAM,EAAE,IAAI,CAAC,OAAO,IAAI,MAAM,CAAC,CAAC;MACrE,KAAK,CAAC,cAAc,EAAE,CAAC;MACvB,KAAK,CAAC,eAAe,EAAE,CAAC;KACzB;GACF;EACD,MAAM;IACJ,OAAO,CAAC,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;GACxB;;;;;;","names":[],"sources":["./node_modules/smoothly/dist/collection/components/trigger-sink/style.css?tag=smoothly-trigger-sink&encapsulation=scoped","./node_modules/smoothly/dist/collection/components/trigger-sink/index.js"],"sourcesContent":[":host {\n\tdisplay: block;\n}\n:host[hidden] {\n\tdisplay: none;\n}\n","import { Component, h, Listen, Prop } from \"@stencil/core\";\nimport { Message, Trigger } from \"../../model\";\nexport class SmoothlyTriggerSink {\n  get filters() {\n    if (!this.filtersValue)\n      this.filtersValue = this.filter ? this.filter.split(\" \") : [];\n    return this.filtersValue;\n  }\n  TriggerListener(event) {\n    if (Trigger.is(event.detail) && this.filters.some(f => f == event.detail.name)) {\n      Message.send(this.destination, event.detail, this.context || window);\n      event.preventDefault();\n      event.stopPropagation();\n    }\n  }\n  render() {\n    return h(\"slot\", null);\n  }\n  static get is() { return \"smoothly-trigger-sink\"; }\n  static get encapsulation() { return \"scoped\"; }\n  static get originalStyleUrls() { return {\n    \"$\": [\"style.css\"]\n  }; }\n  static get styleUrls() { return {\n    \"$\": [\"style.css\"]\n  }; }\n  static get properties() { return {\n    \"context\": {\n      \"type\": \"unknown\",\n      \"mutable\": false,\n      \"complexType\": {\n        \"original\": \"Window\",\n        \"resolved\": \"Window | undefined\",\n        \"references\": {\n          \"Window\": {\n            \"location\": \"global\"\n          }\n        }\n      },\n      \"required\": false,\n      \"optional\": true,\n      \"docs\": {\n        \"tags\": [],\n        \"text\": \"\"\n      }\n    },\n    \"destination\": {\n      \"type\": \"string\",\n      \"mutable\": false,\n      \"complexType\": {\n        \"original\": \"string\",\n        \"resolved\": \"string\",\n        \"references\": {}\n      },\n      \"required\": false,\n      \"optional\": false,\n      \"docs\": {\n        \"tags\": [],\n        \"text\": \"\"\n      },\n      \"attribute\": \"destination\",\n      \"reflect\": false\n    },\n    \"filter\": {\n      \"type\": \"string\",\n      \"mutable\": false,\n      \"complexType\": {\n        \"original\": \"string\",\n        \"resolved\": \"string | undefined\",\n        \"references\": {}\n      },\n      \"required\": false,\n      \"optional\": true,\n      \"docs\": {\n        \"tags\": [],\n        \"text\": \"\"\n      },\n      \"attribute\": \"filter\",\n      \"reflect\": false\n    }\n  }; }\n  static get listeners() { return [{\n      \"name\": \"trigger\",\n      \"method\": \"TriggerListener\",\n      \"target\": undefined,\n      \"capture\": false,\n      \"passive\": false\n    }]; }\n}\n"],"version":3}