{"file":"smoothly-table-row.entry.esm.js","mappings":";;AAAA,MAAM,QAAQ,GAAG,2UAA2U;;MCC/U,QAAQ;EACnB;;;IACE,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC;GACrB;EACD,WAAW,CAAC,KAAK;IACf,IAAI,IAAI,CAAC,gBAAgB;MACvB,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;GAC7C;EACD,OAAO,CAAC,CAAC;IACP,IAAI,CAAC,IAAI,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC;IACvB,CAAC,CAAC,eAAe,EAAE,CAAC;GACrB;EACD,kBAAkB;IAChB,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;IAC/C,IAAI,IAAI,CAAC,gBAAgB,IAAI,IAAI,CAAC,IAAI;MACpC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;GAC7C;EACD,MAAM;IACJ,QAAQ,CAAC,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,EAAE,SAAS,EAAE,IAAI,CAAC,KAAK,EAAE,EAAE,EAClD,CAAC,CAAC,MAAM,EAAE,IAAI,CAAC,EACf,CAAC,CAAC,IAAI,EAAE,EAAE,GAAG,EAAE,CAAC,KAAK,IAAI,CAAC,gBAAgB,GAAG,CAAC,CAAC,EAAE,EAC/C,CAAC,CAAC,IAAI,EAAE,EAAE,OAAO,EAAE,GAAG,EAAE,KAAK,EAAE,CAAC,IAAI,CAAC,IAAI,GAAG,MAAM,GAAG,EAAE,EAAE,EACvD,CAAC,CAAC,MAAM,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE;GACzC;;;;;;;;;;","names":[],"sources":["./node_modules/smoothly/dist/collection/components/table/row/style.css?tag=smoothly-table-row&encapsulation=scoped","./node_modules/smoothly/dist/collection/components/table/row/index.js"],"sourcesContent":[":host {\n\tdisplay: table-row;\n\tborder: 1px solid rgb(var(--smoothly-dark-color), 0.5);\n\tcursor: pointer;\n}\n:host:nth-child(even) {\n\tbackground-color: rgb(var(--smoothly-default-color));\n}\n:host:hover {\n\tbackground-color: rgb(var(--smoothly-default-color));\n}\n.hide{\n\tdisplay: none;\n}\n","import { Component, Element, Event, h, Host, Listen, Prop, State, Watch } from \"@stencil/core\";\nexport class TableRow {\n  constructor() {\n    this.align = \"left\";\n  }\n  openChanged(value) {\n    if (this.expansionElement)\n      this.element.after(this.expansionElement);\n  }\n  onClick(e) {\n    this.open = !this.open;\n    e.stopPropagation();\n  }\n  componentDidRender() {\n    this.expansionOpen.emit(this.expansionElement);\n    if (this.expansionElement && this.open)\n      this.element.after(this.expansionElement);\n  }\n  render() {\n    return (h(Host, { style: { textAlign: this.align } },\n      h(\"slot\", null),\n      h(\"tr\", { ref: e => (this.expansionElement = e) },\n        h(\"td\", { colSpan: 500, class: !this.open ? \"hide\" : \"\" },\n          h(\"slot\", { name: \"detail\" })))));\n  }\n  static get is() { return \"smoothly-table-row\"; }\n  static get encapsulation() { return \"scoped\"; }\n  static get originalStyleUrls() { return {\n    \"$\": [\"style.css\"]\n  }; }\n  static get styleUrls() { return {\n    \"$\": [\"style.css\"]\n  }; }\n  static get properties() { return {\n    \"align\": {\n      \"type\": \"string\",\n      \"mutable\": false,\n      \"complexType\": {\n        \"original\": \"\\\"left\\\" | \\\"center\\\" | \\\"right\\\"\",\n        \"resolved\": \"\\\"center\\\" | \\\"left\\\" | \\\"right\\\"\",\n        \"references\": {}\n      },\n      \"required\": false,\n      \"optional\": false,\n      \"docs\": {\n        \"tags\": [],\n        \"text\": \"\"\n      },\n      \"attribute\": \"align\",\n      \"reflect\": false,\n      \"defaultValue\": \"\\\"left\\\"\"\n    },\n    \"open\": {\n      \"type\": \"boolean\",\n      \"mutable\": true,\n      \"complexType\": {\n        \"original\": \"boolean\",\n        \"resolved\": \"boolean\",\n        \"references\": {}\n      },\n      \"required\": false,\n      \"optional\": false,\n      \"docs\": {\n        \"tags\": [],\n        \"text\": \"\"\n      },\n      \"attribute\": \"open\",\n      \"reflect\": true\n    }\n  }; }\n  static get states() { return {\n    \"beginOpen\": {}\n  }; }\n  static get events() { return [{\n      \"method\": \"expansionOpen\",\n      \"name\": \"expansionOpen\",\n      \"bubbles\": true,\n      \"cancelable\": true,\n      \"composed\": true,\n      \"docs\": {\n        \"tags\": [],\n        \"text\": \"\"\n      },\n      \"complexType\": {\n        \"original\": \"HTMLElement\",\n        \"resolved\": \"HTMLElement\",\n        \"references\": {\n          \"HTMLElement\": {\n            \"location\": \"global\"\n          }\n        }\n      }\n    }]; }\n  static get elementRef() { return \"element\"; }\n  static get watchers() { return [{\n      \"propName\": \"open\",\n      \"methodName\": \"openChanged\"\n    }]; }\n  static get listeners() { return [{\n      \"name\": \"click\",\n      \"method\": \"onClick\",\n      \"target\": undefined,\n      \"capture\": false,\n      \"passive\": false\n    }]; }\n}\n"],"version":3}