{"file":"smoothly-frame.entry.esm.js","mappings":";;;;AAAA,MAAM,QAAQ,GAAG,yLAAyL;;MCE7L,aAAa;;;;;;EACxB,IAAI,aAAa;IACf,MAAM,MAAM,GAAG,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,CAAC,iBAAiB,GAAG,IAAI,CAAC,OAAO,CAAC,iBAAiB,GAAG,SAAS,CAAC;IAC3G,OAAO,CAAC,MAAM,IAAI,MAAM,CAAC,aAAa,KAAK,SAAS,CAAC;GACtD;EACD,IAAI,aAAa;IACf,MAAM,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,oCAAoC,CAAC,CAAC;IACnE,OAAO,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;GAC/B;EACD,gBAAgB;IACd,IAAI,EAAE,CAAC;IACP,IAAI,IAAI,CAAC,aAAa;MACpB,OAAO,CAAC,MAAM,CAAC,CAAC,EAAE,GAAG,IAAI,CAAC,MAAM,MAAM,IAAI,IAAI,EAAE,KAAK,KAAK,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC,WAAW,EAAE,OAAO;QAC1G,IAAI,WAAW,IAAI,IAAI,CAAC,IAAI;UAC1B,IAAI,OAAO,CAAC,EAAE,CAAC,OAAO,CAAC;YACrB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;;YAE3B,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,WAAW,EAAE,OAAO,EAAE,CAAC,CAAC;OACjD,EAAE,MAAM,CAAC,CAAC;GACd;EACD,MAAM,IAAI,CAAC,OAAO,EAAE,OAAO;IACzB,IAAI,EAAE,EAAE,EAAE,CAAC;IACX,IAAI,OAAO,OAAO,IAAI,QAAQ;MAC5B,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,GAAG,IAAI,CAAC,MAAM,MAAM,IAAI,IAAI,EAAE,KAAK,KAAK,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,aAAa,IAAI,GAAG,GAAG,OAAO,EAAE,OAAO,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;SACjI,IAAI,OAAO,CAAC,EAAE,CAAC,OAAO,CAAC,IAAI,IAAI,CAAC,aAAa;MAChD,OAAO,CAAC,IAAI,CAAC,EAAE,WAAW,EAAE,CAAC,CAAC,EAAE,GAAG,IAAI,CAAC,MAAM,MAAM,IAAI,IAAI,EAAE,KAAK,KAAK,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,aAAa,IAAI,GAAG,GAAG,OAAO,CAAC,WAAW,EAAE,OAAO,EAAE,OAAO,CAAC,WAAW,EAAE,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;GACzL;EACD,MAAM;IACJ,OAAO,CAAC,CAAC,QAAQ,EAAE,EAAE,GAAG,EAAE,IAAI,CAAC,GAAG,GAAG,GAAG,GAAG,MAAM,CAAC,QAAQ,CAAC,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,CAAC,CAAC;GACrG;;;;;;;","names":[],"sources":["./node_modules/smoothly/dist/collection/components/frame/style.css?tag=smoothly-frame&encapsulation=scoped","./node_modules/smoothly/dist/collection/components/frame/index.js"],"sourcesContent":[":host {\n\tdisplay: block;\n\twidth: 100%;\n\theight: 100%;\n}\n:host[hidden] {\n\tdisplay: none;\n}\n:host > iframe {\n\tborder: none;\n\tpadding: none;\n\tmargin: none;\n}\n","import { Component, Element, Event, h, Method, Prop } from \"@stencil/core\";\nimport { Message, Trigger } from \"../../model\";\nexport class SmoothlyFrame {\n  get contentWindow() {\n    const iframe = this.element && this.element.firstElementChild ? this.element.firstElementChild : undefined;\n    return (iframe && iframe.contentWindow) || undefined;\n  }\n  get defaultOrigin() {\n    const match = this.url.match(/^(([a-z]+\\+)*[a-z]+:\\/\\/)?[^/^\\n]+/);\n    return match ? match[0] : \"*\";\n  }\n  componentDidLoad() {\n    var _a;\n    if (this.contentWindow)\n      Message.listen((_a = this.origin) !== null && _a !== void 0 ? _a : this.defaultOrigin, (destination, content) => {\n        if (destination == this.name)\n          if (Trigger.is(content))\n            this.trigger.emit(content);\n          else\n            this.message.emit({ destination, content });\n      }, window);\n  }\n  async send(message, content) {\n    var _a, _b;\n    if (typeof message == \"string\")\n      Message.send(((_a = this.origin) !== null && _a !== void 0 ? _a : this.defaultOrigin) + \"#\" + message, content, this.contentWindow);\n    else if (Message.is(message) && this.contentWindow)\n      Message.send({ destination: ((_b = this.origin) !== null && _b !== void 0 ? _b : this.defaultOrigin) + \"#\" + message.destination, content: message.destination }, this.contentWindow);\n  }\n  render() {\n    return h(\"iframe\", { src: this.url + \"#\" + window.location.origin, height: \"100%\", width: \"100%\" });\n  }\n  static get is() { return \"smoothly-frame\"; }\n  static get encapsulation() { return \"scoped\"; }\n  static get originalStyleUrls() { return {\n    \"$\": [\"style.css\"]\n  }; }\n  static get styleUrls() { return {\n    \"$\": [\"style.css\"]\n  }; }\n  static get properties() { return {\n    \"url\": {\n      \"type\": \"string\",\n      \"mutable\": false,\n      \"complexType\": {\n        \"original\": \"string\",\n        \"resolved\": \"string\",\n        \"references\": {}\n      },\n      \"required\": false,\n      \"optional\": false,\n      \"docs\": {\n        \"tags\": [],\n        \"text\": \"\"\n      },\n      \"attribute\": \"url\",\n      \"reflect\": false\n    },\n    \"name\": {\n      \"type\": \"string\",\n      \"mutable\": false,\n      \"complexType\": {\n        \"original\": \"string\",\n        \"resolved\": \"string\",\n        \"references\": {}\n      },\n      \"required\": false,\n      \"optional\": false,\n      \"docs\": {\n        \"tags\": [],\n        \"text\": \"\"\n      },\n      \"attribute\": \"name\",\n      \"reflect\": false\n    },\n    \"origin\": {\n      \"type\": \"string\",\n      \"mutable\": false,\n      \"complexType\": {\n        \"original\": \"string | undefined\",\n        \"resolved\": \"string | undefined\",\n        \"references\": {}\n      },\n      \"required\": false,\n      \"optional\": false,\n      \"docs\": {\n        \"tags\": [],\n        \"text\": \"\"\n      },\n      \"attribute\": \"origin\",\n      \"reflect\": false\n    }\n  }; }\n  static get events() { return [{\n      \"method\": \"trigger\",\n      \"name\": \"trigger\",\n      \"bubbles\": true,\n      \"cancelable\": true,\n      \"composed\": true,\n      \"docs\": {\n        \"tags\": [],\n        \"text\": \"\"\n      },\n      \"complexType\": {\n        \"original\": \"Trigger\",\n        \"resolved\": \"Trigger\",\n        \"references\": {\n          \"Trigger\": {\n            \"location\": \"import\",\n            \"path\": \"../../model\"\n          }\n        }\n      }\n    }, {\n      \"method\": \"message\",\n      \"name\": \"message\",\n      \"bubbles\": true,\n      \"cancelable\": true,\n      \"composed\": true,\n      \"docs\": {\n        \"tags\": [],\n        \"text\": \"\"\n      },\n      \"complexType\": {\n        \"original\": \"Message<any>\",\n        \"resolved\": \"Message<any>\",\n        \"references\": {\n          \"Message\": {\n            \"location\": \"import\",\n            \"path\": \"../../model\"\n          }\n        }\n      }\n    }]; }\n  static get methods() { return {\n    \"send\": {\n      \"complexType\": {\n        \"signature\": \"(message: string | Message<any>, content?: Trigger | any) => Promise<void>\",\n        \"parameters\": [{\n            \"tags\": [],\n            \"text\": \"\"\n          }, {\n            \"tags\": [],\n            \"text\": \"\"\n          }],\n        \"references\": {\n          \"Promise\": {\n            \"location\": \"global\"\n          },\n          \"Message\": {\n            \"location\": \"import\",\n            \"path\": \"../../model\"\n          },\n          \"Trigger\": {\n            \"location\": \"import\",\n            \"path\": \"../../model\"\n          }\n        },\n        \"return\": \"Promise<void>\"\n      },\n      \"docs\": {\n        \"text\": \"\",\n        \"tags\": []\n      }\n    }\n  }; }\n  static get elementRef() { return \"element\"; }\n}\n"],"version":3}