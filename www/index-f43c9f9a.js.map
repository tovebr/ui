{"file":"index-f43c9f9a.js","mappings":"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","names":["__classPrivateFieldGet","__classPrivateFieldSet","gracely.Error","StoreUsers","StoreMe","StoreVersion"],"sources":["./src/Store/Me.ts","./src/Store/Users.ts","./src/Store/Version.ts","./src/Store/index.ts"],"sourcesContent":["import * as gracely from \"gracely\"\nimport * as model from \"@userwidgets/model\"\nimport { Client } from \"../Client\"\n\nexport class Me {\n\t#value?: Promise<model.User.Key | undefined>\n\tget value(): Promise<model.User.Key | undefined> {\n\t\treturn this.#value ?? Promise.resolve(undefined)\n\t}\n\t#listeners: Me.Listeners = { changed: [], unauthorized: [] }\n\tconstructor(private readonly client: Client) {\n\t\tthis.client.onUnauthorized = () =>\n\t\t\tnew Promise(resolve => this.#listeners.unauthorized.forEach(listener => listener(resolve)))\n\t}\n\tlisten<E extends Me.Event>(event: E, listener: Me.Listener<Me.ListenerTypeMap[E]>): void {\n\t\tswitch (event) {\n\t\t\tcase \"changed\":\n\t\t\t\tthis.value.then(value => listener(value as any))\n\t\t\t\tbreak\n\t\t\tcase \"unauthorized\":\n\t\t\t\tbreak\n\t\t}\n\t\tthis.#listeners[event].push(listener as any)\n\t}\n\tlogin(user: model.User.Credentials): Promise<model.User.Key | gracely.Error> {\n\t\tconst result = this.client.me.login(user)\n\t\tthis.#value = result.then(u => {\n\t\t\tconst result = gracely.Error.is(u) ? undefined : u\n\t\t\tif (result)\n\t\t\t\tthis.#listeners.changed.forEach(listener => listener(result))\n\t\t\treturn result\n\t\t})\n\t\treturn result\n\t}\n}\nexport namespace Me {\n\texport type Event = typeof Event.values[number]\n\texport namespace Event {\n\t\texport const values = [\"changed\", \"unauthorized\"] as const\n\t}\n\texport interface ListenerTypeMap extends Record<Event, any> {\n\t\tchanged: model.User.Key\n\t\tunauthorized: (cancel: boolean) => void\n\t}\n\texport type Listener<T> = (value: T | undefined) => void\n\texport type Listeners = {\n\t\treadonly [E in keyof ListenerTypeMap]: Listener<ListenerTypeMap[E]>[]\n\t}\n}\n","import * as gracely from \"gracely\"\nimport * as model from \"@userwidgets/model\"\nimport { Client } from \"../Client\"\n\nexport class Users {\n\t#value?: Promise<model.User[]>\n\tget value(): Promise<model.User[]> {\n\t\treturn this.#value ?? (this.#value = this.client.user.list().then(v => (gracely.Error.is(v) ? [] : v)))\n\t}\n\tset value(value: Promise<model.User[]>) {\n\t\tthis.#value = value\n\t\tvalue.then(v => this.#listeners[\"changed\"].forEach(listener => listener(v)))\n\t}\n\t#listeners: Users.Listeners = { changed: [], created: [] }\n\tconstructor(private readonly client: Client) {}\n\tlisten<E extends Users.Event>(event: E, listener: Users.Listener<Users.ListenerTypeMap[E]>): void {\n\t\tswitch (event) {\n\t\t\tcase \"changed\":\n\t\t\t\tthis.value.then(v => listener(v as any))\n\t\t\t\tbreak\n\t\t}\n\t\tthis.#listeners[event].push(listener)\n\t}\n\tcreate(user: model.User.Credentials): Promise<model.User | gracely.Error> {\n\t\treturn this.client.user.create(user)\n\t}\n}\nexport namespace Users {\n\texport type Event = typeof Event.values[number]\n\texport namespace Event {\n\t\texport const values = [\"changed\"] as const // removed \"created\"\n\t}\n\texport interface ListenerTypeMap extends Record<Event, any> {\n\t\tchanged: model.User[]\n\t\tcreated: [model.User]\n\t}\n\texport type Listener<T> = (value: T | undefined) => void\n\texport type Listeners = {\n\t\treadonly [E in keyof ListenerTypeMap]: Listener<ListenerTypeMap[E]>[]\n\t}\n}\n","import * as gracely from \"gracely\"\nimport { Client } from \"../Client\"\n\nexport class Version {\n\t#value: Promise<{ name: string; version: string } | undefined>\n\tget value(): Promise<{ name: string; version: string } | undefined> {\n\t\treturn this.#value ?? (this.#value = this.client.version.fetch().then(v => (gracely.Error.is(v) ? undefined : v)))\n\t}\n\t#listeners: Version.Listeners = { changed: [] }\n\tconstructor(private readonly client: Client) {}\n\tlisten<E extends Version.Event>(event: E, listener: Version.Listener<Version.ListenerTypeMap[E]>): void {\n\t\tswitch (event) {\n\t\t\tcase \"changed\":\n\t\t\t\tthis.value.then(v => listener(v))\n\t\t\t\tbreak\n\t\t}\n\t\tthis.#listeners[event].push(listener)\n\t}\n}\n\nexport namespace Version {\n\texport type Event = typeof Event.values[number]\n\texport namespace Event {\n\t\texport const values = [\"changed\"] as const\n\t}\n\texport interface ListenerTypeMap extends Record<Event, any> {\n\t\tchanged: { name: string; version: string }\n\t}\n\texport type Listener<T> = (value: T | undefined) => void\n\texport type Listeners = {\n\t\treadonly [E in keyof ListenerTypeMap]: Listener<ListenerTypeMap[E]>[]\n\t}\n}\n","import { Client } from \"../Client\"\nimport { client } from \"../client\"\nimport { Me as StoreMe } from \"./Me\"\nimport { Users as StoreUsers } from \"./Users\"\nimport { Version as StoreVersion } from \"./Version\"\n\nexport class Store {\n\treadonly users: StoreUsers\n\treadonly me: StoreMe\n\treadonly version: StoreVersion\n\tconstructor(client: Client) {\n\t\tthis.users = new StoreUsers(client)\n\t\tthis.me = new StoreMe(client)\n\t\tthis.version = new StoreVersion(client)\n\t}\n}\nexport namespace Store {\n\texport type Me = StoreMe\n\texport type Users = StoreUsers\n\texport type Version = StoreVersion\n}\nexport const store = new Store(client)\n"],"version":3}