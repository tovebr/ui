{"file":"userwidgets-set-password.entry.esm.js","mappings":";;;;;;;;;AAAA,MAAM,QAAQ,GAAG,EAAE;;MCWN,WAAW;;;;;EAMvB,qBAAqB,CAAC,KAA6D;IAClF,KAAK,CAAC,MAAM,CAAC,IAAI,IAAI,KAAK,IAAI,IAAI,CAAC,GAAG,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,KAAK,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAA;GACjG;EAED,MAAM,oBAAoB,CAAC,KAAY;IACtC,KAAK,CAAC,cAAc,EAAE,CAAA;IACtB,KAAK,CAAC,eAAe,EAAE,CAAA;IACvB,MAAM,SAAS,GAAG,MAAM,CAAC,WAAW,CAAC,IAAI,QAAQ,CAAC,KAAK,CAAC,MAAyB,CAAC,CAAC,CAAA;IACnF,IAAI,CAACA,IAAsB,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE,CAAC,SAAS,CAAC;MACxD,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAA;SAC5C,IAAI,SAAS,CAAC,GAAG,IAAI,SAAS,CAAC,MAAM;MACzC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,0CAA0C,CAAC,CAAC,CAAA;SACrE;MACJ,MAAM,QAAQ,GAAG,MAAM,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,SAAS,CAAC,CAAA;MAC7E,IAAIC,KAAa,CAAC,EAAE,CAAC,QAAQ,CAAC,EAAE;QAC/B,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAA;OAC5C;KACD;GACD;EAED,MAAM;IACL,QACC,gBACC,sBAAgB,IAAI,EAAC,UAAU,EAAC,IAAI,EAAC,KAAK,EAAC,KAAK,EAAE,IAAI,CAAC,GAAG,GAAmB,EAC7E,sBAAgB,IAAI,EAAC,UAAU,EAAC,IAAI,EAAC,QAAQ,EAAC,KAAK,EAAE,IAAI,CAAC,MAAM,GAAmB,EACnF,uBAAiB,QAAQ,EAAE,IAAI,CAAC,GAAG,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,GAAG,CAAC,MAAM,IAAI,CAAC,GAAoB,CACxF,EACP;GACD;;;;;;","names":["model.userwidgets.User","gracely.Error"],"sources":["./src/components/user/set-password/style.css?tag=userwidgets-set-password&encapsulation=scoped","./src/components/user/set-password/index.tsx"],"sourcesContent":["","import { Component, Event, EventEmitter, h, Listen, Prop, State } from \"@stencil/core\"\nimport * as gracely from \"gracely\"\nimport { Notice } from \"smoothly\"\nimport { client } from \"../../../client\"\nimport { model } from \"../../../model\"\n\n@Component({\n\ttag: \"userwidgets-set-password\",\n\tstyleUrl: \"style.css\",\n\tscoped: true,\n})\nexport class SetPassword {\n\t@Prop() user: model.userwidgets.User\n\t@Event() notice: EventEmitter<Notice>\n\t@State() new: string\n\t@State() repeat: string\n\t@Listen(\"smoothlyChanged\")\n\thandleSmoothlyChanged(event: CustomEvent<{ name: \"new\" | \"repeat\"; value: string }>) {\n\t\tevent.detail.name == \"new\" ? (this.new = event.detail.value) : (this.repeat = event.detail.value)\n\t}\n\t@Listen(\"submit\")\n\tasync handleSmoothlySubmit(event: Event) {\n\t\tevent.preventDefault()\n\t\tevent.stopPropagation()\n\t\tconst passwords = Object.fromEntries(new FormData(event.target as HTMLFormElement))\n\t\tif (!model.userwidgets.User.Password.Change.is(passwords))\n\t\t\tthis.notice.emit(Notice.warn(\"Missing fields.\"))\n\t\telse if (passwords.new != passwords.repeat)\n\t\t\tthis.notice.emit(Notice.warn(\"New password was not repeated correctly.\"))\n\t\telse {\n\t\t\tconst response = await client.user.changePassword(this.user.email, passwords)\n\t\t\tif (gracely.Error.is(response)) {\n\t\t\t\tthis.notice.emit(Notice.warn(response.body))\n\t\t\t}\n\t\t}\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<from>\n\t\t\t\t<smoothly-input type=\"password\" name=\"new\" value={this.new}></smoothly-input>\n\t\t\t\t<smoothly-input type=\"password\" name=\"repeat\" value={this.repeat}></smoothly-input>\n\t\t\t\t<smoothly-submit disabled={this.new != this.repeat || this.new.length == 0}></smoothly-submit>\n\t\t\t</from>\n\t\t)\n\t}\n}\n"],"version":3}