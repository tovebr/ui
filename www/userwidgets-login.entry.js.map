{"file":"userwidgets-login.entry.esm.js","mappings":";;;;;AAAA,MAAM,QAAQ,GAAG,EAAE;;MCUN,KAAK;;;;EAIjB,MAAM,WAAW,CAAC,KAAsD;;IACvE,KAAK,CAAC,cAAc,EAAE,CAAA;IACtB,MAAM,QAAQ,GAAG,MAAM,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,CAAA;IACnD,IAAIA,KAAa,CAAC,EAAE,CAAC,QAAQ,CAAC;MAC7B,IAAI,CAAC,KAAK,GAAG,QAAQ,CAAA;SACjB;MACJ,MAAA,IAAI,CAAC,OAAO,+CAAZ,IAAI,EAAW,IAAI,CAAC,CAAA;MACpB,IAAI,CAAC,OAAO,GAAG,SAAS,CAAA;MACxB,IAAI,CAAC,KAAK,GAAG,SAAS,CAAA;KACtB;GACD;EACD,MAAM,iBAAiB;IACtB,KAAK,CAAC,EAAE,CAAC,MAAM,CAAC,cAAc,EAAE,OAAO,KAAK,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC,CAAC,CAAA;GACpE;EACD,MAAM;IACL,QACC,EAAC,IAAI,QACH,IAAI,CAAC,OAAO,GAAG,mCAAqD,GAAG,EAAE,EAC1E,eAAa,CACP,EACP;GACD;;;;;;","names":["gracely.Error"],"sources":["./src/components/user/login/style.css?tag=userwidgets-login&encapsulation=scoped","./src/components/user/login/index.tsx"],"sourcesContent":["","import { Component, ComponentWillLoad, h, Host, Listen, State } from \"@stencil/core\"\nimport * as gracely from \"gracely\"\nimport { model } from \"../../../model\"\nimport { store } from \"../../../Store\"\n\n@Component({\n\ttag: \"userwidgets-login\",\n\tstyleUrl: \"style.css\",\n\tscoped: true,\n})\nexport class Login implements ComponentWillLoad {\n\t@State() resolve?: (result: boolean) => void\n\t@State() error?: gracely.Error\n\t@Listen(\"login\")\n\tasync handleLogin(event: CustomEvent<model.userwidgets.User.Credentials>) {\n\t\tevent.preventDefault()\n\t\tconst response = await store.me.login(event.detail)\n\t\tif (gracely.Error.is(response))\n\t\t\tthis.error = response\n\t\telse {\n\t\t\tthis.resolve?.(true)\n\t\t\tthis.resolve = undefined\n\t\t\tthis.error = undefined\n\t\t}\n\t}\n\tasync componentWillLoad(): Promise<void> {\n\t\tstore.me.listen(\"unauthorized\", resolve => (this.resolve = resolve))\n\t}\n\trender() {\n\t\treturn (\n\t\t\t<Host>\n\t\t\t\t{this.resolve ? <userwidgets-login-dialog></userwidgets-login-dialog> : []}\n\t\t\t\t<slot></slot>\n\t\t\t</Host>\n\t\t)\n\t}\n}\n"],"version":3}