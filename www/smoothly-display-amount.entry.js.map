{"file":"smoothly-display-amount.entry.esm.js","mappings":";;;AAAA,MAAM,QAAQ,GAAG,iGAAiG;;MCErG,qBAAqB;;;;EAChC,MAAM,CAAC,MAAM;IACX,MAAM,cAAc,GAAG,CAAC,CAAC;IACzB,MAAM,eAAe,GAAG,CAAC,CAAC;IAC1B,MAAM,WAAW,IAAIA,aAAQ,CAAC,aAAa,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAGA,aAAQ,CAAC,aAAa,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,eAAe,CAAC,CAAC;IACtH,IAAI,eAAe,GAAG,MAAM,CAAC,MAAM,CAAC;IACpC,IAAI,SAAS,CAAC;IACd,IAAI,MAAM,GAAG,MAAM,CAAC;IACpB,IAAI,MAAM,IAAI,EAAE;MACd,MAAM,GAAG,GAAG,CAAC;IACf,IAAI,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE;MACxB,SAAS,GAAG,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;MAChC,IAAI,SAAS,IAAI,CAAC,EAAE;QAClB,MAAM,GAAG,GAAG,GAAG,MAAM,CAAC;QACtB,SAAS,EAAE,CAAC;OACb;MACD,eAAe,GAAG,SAAS,CAAC;MAC5B,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,SAAS,GAAG,WAAW,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC;MACzD,MAAM,GAAG,MAAM,CAAC,SAAS,CAAC,CAAC,EAAE,SAAS,GAAG,WAAW,GAAG,CAAC,CAAC,CAAC;KAC3D;SACI;MACH,MAAM,GAAG,MAAM,GAAG,GAAG,CAAC;MACtB,SAAS,GAAG,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC;MAC9B,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,SAAS,GAAG,WAAW,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC;KAC1D;IACD,MAAM,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,eAAe,GAAG,cAAc,CAAC,GAAG,CAAC,CAAC;IAC/D,IAAI,MAAM,GAAG,CAAC,EAAE;MACd,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE;QAC/B,MAAM,QAAQ,GAAG,eAAe,GAAG,CAAC,MAAM,GAAG,CAAC,IAAI,cAAc,CAAC;QACjE,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,QAAQ,CAAC,GAAG,GAAG,GAAG,MAAM,CAAC,KAAK,CAAC,QAAQ,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC;QACjF,eAAe,EAAE,CAAC;OACnB;KACF;IACD,OAAO,MAAM,CAAC;GACf;EACD,MAAM;IACJ,OAAO;MACL,OAAO,IAAI,CAAC,MAAM,IAAI,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC;MAC/F,GAAG;MACH,IAAI,CAAC,QAAQ;KACd,CAAC;GACH;;;;;;","names":["Currency"],"sources":["./node_modules/smoothly/dist/collection/components/display-amount/style.css?tag=smoothly-display-amount&encapsulation=scoped","./node_modules/smoothly/dist/collection/components/display-amount/index.js"],"sourcesContent":[":host {\n\tdisplay: block;\n}\n:host[hidden] {\n\tdisplay: none;\n}\n","import { Component, Prop } from \"@stencil/core\";\nimport { Currency } from \"isoly\";\nexport class SmoothlyDisplayAmount {\n  format(amount) {\n    const digitsPerGroup = 3;\n    const defaultDecimals = 2;\n    const maxDecimals = (Currency.decimalDigits(this.currency) ? Currency.decimalDigits(this.currency) : defaultDecimals);\n    let beforeSeparator = amount.length;\n    let separator;\n    let result = amount;\n    if (result == \"\")\n      result = \"0\";\n    if (amount.includes(\".\")) {\n      separator = amount.indexOf(\".\");\n      if (separator == 0) {\n        result = \"0\" + result;\n        separator++;\n      }\n      beforeSeparator = separator;\n      result = result.padEnd(separator + maxDecimals + 1, \"0\");\n      result = result.substring(0, separator + maxDecimals + 1);\n    }\n    else {\n      result = result + \".\";\n      separator = result.length - 1;\n      result = result.padEnd(separator + maxDecimals + 1, \"0\");\n    }\n    const spaces = Math.ceil(beforeSeparator / digitsPerGroup) - 1;\n    if (spaces > 0) {\n      for (let i = 0; i < spaces; i++) {\n        const position = beforeSeparator - (spaces - i) * digitsPerGroup;\n        result = result.slice(0, position) + \" \" + result.slice(position, result.length);\n        beforeSeparator++;\n      }\n    }\n    return result;\n  }\n  render() {\n    return [\n      typeof this.amount == \"number\" ? this.format(this.amount.toString()) : this.format(this.amount),\n      \" \",\n      this.currency,\n    ];\n  }\n  static get is() { return \"smoothly-display-amount\"; }\n  static get encapsulation() { return \"scoped\"; }\n  static get originalStyleUrls() { return {\n    \"$\": [\"style.css\"]\n  }; }\n  static get styleUrls() { return {\n    \"$\": [\"style.css\"]\n  }; }\n  static get properties() { return {\n    \"amount\": {\n      \"type\": \"any\",\n      \"mutable\": false,\n      \"complexType\": {\n        \"original\": \"number | string\",\n        \"resolved\": \"number | string\",\n        \"references\": {}\n      },\n      \"required\": false,\n      \"optional\": false,\n      \"docs\": {\n        \"tags\": [],\n        \"text\": \"\"\n      },\n      \"attribute\": \"amount\",\n      \"reflect\": false\n    },\n    \"currency\": {\n      \"type\": \"string\",\n      \"mutable\": false,\n      \"complexType\": {\n        \"original\": \"Currency\",\n        \"resolved\": \"\\\"AED\\\" | \\\"AFN\\\" | \\\"ALL\\\" | \\\"AMD\\\" | \\\"ANG\\\" | \\\"AOA\\\" | \\\"ARS\\\" | \\\"AUD\\\" | \\\"AWG\\\" | \\\"AZN\\\" | \\\"BAM\\\" | \\\"BBD\\\" | \\\"BDT\\\" | \\\"BGN\\\" | \\\"BHD\\\" | \\\"BIF\\\" | \\\"BMD\\\" | \\\"BND\\\" | \\\"BOB\\\" | \\\"BOV\\\" | \\\"BRL\\\" | \\\"BSD\\\" | \\\"BTN\\\" | \\\"BWP\\\" | \\\"BYN\\\" | \\\"BZD\\\" | \\\"CAD\\\" | \\\"CDF\\\" | \\\"CHE\\\" | \\\"CHF\\\" | \\\"CHW\\\" | \\\"CLF\\\" | \\\"CLP\\\" | \\\"CNY\\\" | \\\"COP\\\" | \\\"COU\\\" | \\\"CRC\\\" | \\\"CUC\\\" | \\\"CUP\\\" | \\\"CVE\\\" | \\\"CZK\\\" | \\\"DJF\\\" | \\\"DKK\\\" | \\\"DOP\\\" | \\\"DZD\\\" | \\\"EGP\\\" | \\\"ERN\\\" | \\\"ETB\\\" | \\\"EUR\\\" | \\\"FJD\\\" | \\\"FKP\\\" | \\\"GBP\\\" | \\\"GEL\\\" | \\\"GHS\\\" | \\\"GIP\\\" | \\\"GMD\\\" | \\\"GNF\\\" | \\\"GTQ\\\" | \\\"GYD\\\" | \\\"HKD\\\" | \\\"HNL\\\" | \\\"HRK\\\" | \\\"HTG\\\" | \\\"HUF\\\" | \\\"IDR\\\" | \\\"ILS\\\" | \\\"INR\\\" | \\\"IQD\\\" | \\\"IRR\\\" | \\\"ISK\\\" | \\\"JMD\\\" | \\\"JOD\\\" | \\\"JPY\\\" | \\\"KES\\\" | \\\"KGS\\\" | \\\"KHR\\\" | \\\"KMF\\\" | \\\"KPW\\\" | \\\"KRW\\\" | \\\"KWD\\\" | \\\"KYD\\\" | \\\"KZT\\\" | \\\"LAK\\\" | \\\"LBP\\\" | \\\"LKR\\\" | \\\"LRD\\\" | \\\"LSL\\\" | \\\"LYD\\\" | \\\"MAD\\\" | \\\"MDL\\\" | \\\"MGA\\\" | \\\"MKD\\\" | \\\"MMK\\\" | \\\"MNT\\\" | \\\"MOP\\\" | \\\"MRU\\\" | \\\"MUR\\\" | \\\"MVR\\\" | \\\"MWK\\\" | \\\"MXN\\\" | \\\"MXV\\\" | \\\"MYR\\\" | \\\"MZN\\\" | \\\"NAD\\\" | \\\"NGN\\\" | \\\"NIO\\\" | \\\"NOK\\\" | \\\"NPR\\\" | \\\"NZD\\\" | \\\"OMR\\\" | \\\"PAB\\\" | \\\"PEN\\\" | \\\"PGK\\\" | \\\"PHP\\\" | \\\"PKR\\\" | \\\"PLN\\\" | \\\"PYG\\\" | \\\"QAR\\\" | \\\"RON\\\" | \\\"RSD\\\" | \\\"RUB\\\" | \\\"RWF\\\" | \\\"SAR\\\" | \\\"SBD\\\" | \\\"SCR\\\" | \\\"SDG\\\" | \\\"SEK\\\" | \\\"SGD\\\" | \\\"SHP\\\" | \\\"SLL\\\" | \\\"SOS\\\" | \\\"SRD\\\" | \\\"SSP\\\" | \\\"STN\\\" | \\\"SVC\\\" | \\\"SYP\\\" | \\\"SZL\\\" | \\\"THB\\\" | \\\"TJS\\\" | \\\"TMT\\\" | \\\"TND\\\" | \\\"TOP\\\" | \\\"TRY\\\" | \\\"TTD\\\" | \\\"TWD\\\" | \\\"TZS\\\" | \\\"UAH\\\" | \\\"UGX\\\" | \\\"USD\\\" | \\\"USN\\\" | \\\"UYI\\\" | \\\"UYU\\\" | \\\"UYW\\\" | \\\"UZS\\\" | \\\"VES\\\" | \\\"VND\\\" | \\\"VUV\\\" | \\\"WST\\\" | \\\"XAF\\\" | \\\"XAG\\\" | \\\"XAU\\\" | \\\"XBA\\\" | \\\"XBB\\\" | \\\"XBC\\\" | \\\"XBD\\\" | \\\"XCD\\\" | \\\"XDR\\\" | \\\"XOF\\\" | \\\"XPD\\\" | \\\"XPF\\\" | \\\"XPT\\\" | \\\"XSU\\\" | \\\"XTS\\\" | \\\"XUA\\\" | \\\"XXX\\\" | \\\"YER\\\" | \\\"ZAR\\\" | \\\"ZMW\\\" | \\\"ZWL\\\"\",\n        \"references\": {\n          \"Currency\": {\n            \"location\": \"import\",\n            \"path\": \"isoly\"\n          }\n        }\n      },\n      \"required\": false,\n      \"optional\": false,\n      \"docs\": {\n        \"tags\": [],\n        \"text\": \"\"\n      },\n      \"attribute\": \"currency\",\n      \"reflect\": false\n    }\n  }; }\n}\n"],"version":3}