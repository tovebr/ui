{"file":"smoothly-spinner.entry.esm.js","mappings":";;AAAA,MAAM,QAAQ,GAAG,k+BAAk+B;;MCCt+B,eAAe;EAC1B;;IACE,IAAI,CAAC,IAAI,GAAG,OAAO,CAAC;GACrB;EACD,MAAM;IACJ,MAAM,WAAW,GAAG,IAAI,CAAC,IAAI,IAAI,OAAO,GAAG,CAAC,GAAG,IAAI,CAAC,IAAI,IAAI,QAAQ,GAAG,CAAC,GAAG,EAAE,CAAC;IAC9E,QAAQ,CAAC,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE;QACrB,SAAS,EAAE,sBAAsB;QACjC,QAAQ,EAAE,IAAI,CAAC,IAAI,IAAI,OAAO,GAAG,KAAK,GAAG,IAAI,CAAC,IAAI,IAAI,QAAQ,GAAG,KAAK,GAAG,OAAO;OACjF,EAAE,EACH,CAAC,CAAC,KAAK,EAAE,EAAE,KAAK,EAAE,SAAS,EAAE,OAAO,EAAE,OAAO,EAAE,GAAG,WAAW,IAAI,EAAE,GAAG,WAAW,EAAE,EAAE,KAAK,EAAE,4BAA4B,EAAE,EACxH,CAAC,CAAC,QAAQ,EAAE,EAAE,KAAK,EAAE,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,cAAc,EAAE,WAAW,EAAE,gBAAgB,EAAE,OAAO,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,WAAW,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,WAAW,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,EAAE;GACpL;;;;;;","names":[],"sources":["./node_modules/smoothly/dist/collection/components/spinner/style.css?tag=smoothly-spinner&encapsulation=scoped","./node_modules/smoothly/dist/collection/components/spinner/index.js"],"sourcesContent":[":host:not([active]) {\n  display: none;\n}\n\n:host[hidden] {\n  display: none;\n}\n\n:host {\n  display: block;\n  stroke: rgb(var(--spinner-color, var(--smoothly-primary-tint)));\n  position: absolute;\n  inset: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(var(--background-color, var(--smoothly-default-color)), var(--background-opacity, var(--smoothly-semitransparent, 0.8)));\n}\n:host svg {\n  position: absolute;\n  left: calc(50% - var(--size) / 2);\n  top: calc(50% - var(--size) / 2);\n  width: var(--size);\n  animation: SPIN-SVG 1.4s linear infinite;\n}\n:host svg circle {\n  transform-origin: center;\n  animation: SPIN-CIRCLE 1.4s ease-in-out infinite;\n  stroke-dasharray: 187;\n  stroke-dashoffset: 0;\n}\n\n@keyframes SPIN-SVG {\n  0% {\n    transform: rotate(0deg);\n  }\n  100% {\n    transform: rotate(270deg);\n  }\n}\n@keyframes SPIN-CIRCLE {\n  0% {\n    stroke-dashoffset: 187;\n  }\n  50% {\n    stroke-dashoffset: 46.75;\n    transform: rotate(135deg);\n  }\n  100% {\n    stroke-dashoffset: 187;\n    transform: rotate(450deg);\n  }\n}","import { Component, h, Host, Prop } from \"@stencil/core\";\nexport class SmoothlySpinner {\n  constructor() {\n    this.size = \"large\";\n  }\n  render() {\n    const strokeWidth = this.size == \"large\" ? 6 : this.size == \"medium\" ? 8 : 12;\n    return (h(Host, { style: {\n        \"--color\": `var(--spinner-color)`,\n        \"--size\": this.size == \"large\" ? \"5em\" : this.size == \"medium\" ? \"3em\" : \"1.2em\",\n      } },\n      h(\"svg\", { class: \"spinner\", viewBox: `0 0 ${60 + strokeWidth} ${60 + strokeWidth}`, xmlns: \"http://www.w3.org/2000/svg\" },\n        h(\"circle\", { class: \"path\", fill: \"none\", \"stroke-width\": strokeWidth, \"stroke-linecap\": \"round\", cx: `${30 + strokeWidth / 2}`, cy: `${30 + strokeWidth / 2}`, r: \"30\" }))));\n  }\n  static get is() { return \"smoothly-spinner\"; }\n  static get encapsulation() { return \"scoped\"; }\n  static get originalStyleUrls() { return {\n    \"$\": [\"style.scss\"]\n  }; }\n  static get styleUrls() { return {\n    \"$\": [\"style.css\"]\n  }; }\n  static get properties() { return {\n    \"active\": {\n      \"type\": \"boolean\",\n      \"mutable\": false,\n      \"complexType\": {\n        \"original\": \"boolean\",\n        \"resolved\": \"boolean\",\n        \"references\": {}\n      },\n      \"required\": false,\n      \"optional\": false,\n      \"docs\": {\n        \"tags\": [],\n        \"text\": \"\"\n      },\n      \"attribute\": \"active\",\n      \"reflect\": true\n    },\n    \"size\": {\n      \"type\": \"string\",\n      \"mutable\": false,\n      \"complexType\": {\n        \"original\": \"\\\"small\\\" | \\\"medium\\\" | \\\"large\\\"\",\n        \"resolved\": \"\\\"large\\\" | \\\"medium\\\" | \\\"small\\\"\",\n        \"references\": {}\n      },\n      \"required\": false,\n      \"optional\": false,\n      \"docs\": {\n        \"tags\": [],\n        \"text\": \"\"\n      },\n      \"attribute\": \"size\",\n      \"reflect\": true,\n      \"defaultValue\": \"\\\"large\\\"\"\n    }\n  }; }\n}\n"],"version":3}