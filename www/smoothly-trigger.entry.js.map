{"file":"smoothly-trigger.entry.esm.js","mappings":";;AAAA,MAAM,QAAQ,GAAG,+rBAA+rB;;MCCnsB,eAAe;EAC1B;;;IACE,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;IACtB,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC;GACtB;EACD,OAAO,CAAC,CAAC;IACP,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC;IAC1D,CAAC,CAAC,eAAe,EAAE,CAAC;IACpB,CAAC,CAAC,cAAc,EAAE,CAAC;GACpB;EACD,MAAM;IACJ,IAAI,MAAM,CAAC;IACX,QAAQ,IAAI,CAAC,IAAI;MACf,KAAK,MAAM;QACT,MAAM,GAAG,IAAI,CAAC,QAAQ,IAAI,CAAC,CAAC,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,EAAE,EAAE,OAAO,EAAE,CAAC,IAAI,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,EACpF,CAAC,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;QACpB,MAAM;MACR,KAAK,QAAQ;QACX,MAAM,IAAI,CAAC,CAAC,QAAQ,EAAE,EAAE,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,EAChE,CAAC,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;QACpB,MAAM;KACT;IACD,OAAO,MAAM,CAAC;GACf;;;;;;","names":[],"sources":["./node_modules/smoothly/dist/collection/components/trigger/style.css?tag=smoothly-trigger&encapsulation=scoped","./node_modules/smoothly/dist/collection/components/trigger/index.js"],"sourcesContent":[":host {\n\tdisplay: block;\n\tborder-style: solid;\n\tborder-width: 1px;\n\tborder-radius: 3px;\n}\n:host[hidden] {\n\tdisplay: none;\n}\n:host[disabled] {\n\topacity: 0.5;\n}\nbutton {\n\tborder-color: transparent;\n\tbackground-color: transparent;\n\tpadding: 0.2em 0.3em;\n\tfont-size: 110%;\n\tfont-weight: 400;\n}\n:host:not([disabled]):hover,\n:host:not([disabled]):focus,\n:host:not([disabled]):active {\n\tborder-color: var(--smoothly-trigger-border);\n}\n:host[expand=fill] > button,\n:host[expand=block] > button {\n\twidth: 100%;\n}\n:host[expand=fill] {\n\tborder-left: none;\n\tborder-right: none;\n}\n","import { Component, Event, h, Listen, Prop } from \"@stencil/core\";\nexport class SmoothlyTrigger {\n  constructor() {\n    this.disabled = false;\n    this.type = \"button\";\n  }\n  onClick(e) {\n    this.trigger.emit({ name: this.name, value: this.value });\n    e.stopPropagation();\n    e.preventDefault();\n  }\n  render() {\n    let result;\n    switch (this.type) {\n      case \"link\":\n        result = this.disabled ? (h(\"slot\", null)) : (h(\"a\", { onClick: e => this.onClick(e) },\n          h(\"slot\", null)));\n        break;\n      case \"button\":\n        result = (h(\"button\", { disabled: this.disabled, name: this.name },\n          h(\"slot\", null)));\n        break;\n    }\n    return result;\n  }\n  static get is() { return \"smoothly-trigger\"; }\n  static get encapsulation() { return \"scoped\"; }\n  static get originalStyleUrls() { return {\n    \"$\": [\"style.css\"]\n  }; }\n  static get styleUrls() { return {\n    \"$\": [\"style.css\"]\n  }; }\n  static get properties() { return {\n    \"color\": {\n      \"type\": \"string\",\n      \"mutable\": false,\n      \"complexType\": {\n        \"original\": \"Color | undefined\",\n        \"resolved\": \"\\\"danger\\\" | \\\"dark\\\" | \\\"default\\\" | \\\"light\\\" | \\\"medium\\\" | \\\"primary\\\" | \\\"secondary\\\" | \\\"success\\\" | \\\"tertiary\\\" | \\\"warning\\\" | undefined\",\n        \"references\": {\n          \"Color\": {\n            \"location\": \"import\",\n            \"path\": \"../../model\"\n          }\n        }\n      },\n      \"required\": false,\n      \"optional\": false,\n      \"docs\": {\n        \"tags\": [],\n        \"text\": \"\"\n      },\n      \"attribute\": \"color\",\n      \"reflect\": true\n    },\n    \"expand\": {\n      \"type\": \"string\",\n      \"mutable\": false,\n      \"complexType\": {\n        \"original\": \"Expand\",\n        \"resolved\": \"\\\"block\\\" | \\\"full\\\"\",\n        \"references\": {\n          \"Expand\": {\n            \"location\": \"import\",\n            \"path\": \"../../model\"\n          }\n        }\n      },\n      \"required\": false,\n      \"optional\": false,\n      \"docs\": {\n        \"tags\": [],\n        \"text\": \"\"\n      },\n      \"attribute\": \"expand\",\n      \"reflect\": true\n    },\n    \"fill\": {\n      \"type\": \"string\",\n      \"mutable\": false,\n      \"complexType\": {\n        \"original\": \"Fill\",\n        \"resolved\": \"\\\"clear\\\" | \\\"default\\\" | \\\"outline\\\" | \\\"solid\\\"\",\n        \"references\": {\n          \"Fill\": {\n            \"location\": \"import\",\n            \"path\": \"../../model\"\n          }\n        }\n      },\n      \"required\": false,\n      \"optional\": false,\n      \"docs\": {\n        \"tags\": [],\n        \"text\": \"\"\n      },\n      \"attribute\": \"fill\",\n      \"reflect\": true\n    },\n    \"disabled\": {\n      \"type\": \"boolean\",\n      \"mutable\": false,\n      \"complexType\": {\n        \"original\": \"boolean\",\n        \"resolved\": \"boolean\",\n        \"references\": {}\n      },\n      \"required\": false,\n      \"optional\": false,\n      \"docs\": {\n        \"tags\": [],\n        \"text\": \"\"\n      },\n      \"attribute\": \"disabled\",\n      \"reflect\": true,\n      \"defaultValue\": \"false\"\n    },\n    \"type\": {\n      \"type\": \"string\",\n      \"mutable\": false,\n      \"complexType\": {\n        \"original\": \"\\\"link\\\" | \\\"button\\\"\",\n        \"resolved\": \"\\\"button\\\" | \\\"link\\\"\",\n        \"references\": {}\n      },\n      \"required\": false,\n      \"optional\": false,\n      \"docs\": {\n        \"tags\": [],\n        \"text\": \"\"\n      },\n      \"attribute\": \"type\",\n      \"reflect\": true,\n      \"defaultValue\": \"\\\"button\\\"\"\n    },\n    \"name\": {\n      \"type\": \"string\",\n      \"mutable\": false,\n      \"complexType\": {\n        \"original\": \"string\",\n        \"resolved\": \"string\",\n        \"references\": {}\n      },\n      \"required\": false,\n      \"optional\": false,\n      \"docs\": {\n        \"tags\": [],\n        \"text\": \"\"\n      },\n      \"attribute\": \"name\",\n      \"reflect\": false\n    },\n    \"value\": {\n      \"type\": \"any\",\n      \"mutable\": false,\n      \"complexType\": {\n        \"original\": \"any\",\n        \"resolved\": \"any\",\n        \"references\": {}\n      },\n      \"required\": false,\n      \"optional\": true,\n      \"docs\": {\n        \"tags\": [],\n        \"text\": \"\"\n      },\n      \"attribute\": \"value\",\n      \"reflect\": false\n    }\n  }; }\n  static get events() { return [{\n      \"method\": \"trigger\",\n      \"name\": \"trigger\",\n      \"bubbles\": true,\n      \"cancelable\": true,\n      \"composed\": true,\n      \"docs\": {\n        \"tags\": [],\n        \"text\": \"\"\n      },\n      \"complexType\": {\n        \"original\": \"Trigger\",\n        \"resolved\": \"Trigger\",\n        \"references\": {\n          \"Trigger\": {\n            \"location\": \"import\",\n            \"path\": \"../../model\"\n          }\n        }\n      }\n    }]; }\n  static get listeners() { return [{\n      \"name\": \"click\",\n      \"method\": \"onClick\",\n      \"target\": undefined,\n      \"capture\": false,\n      \"passive\": false\n    }]; }\n}\n"],"version":3}