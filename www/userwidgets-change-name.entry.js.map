{"file":"userwidgets-change-name.entry.esm.js","mappings":";;;;;;;;;AAAA,MAAM,QAAQ,GAAG,EAAE;;MCWN,UAAU;EALvB;;;IAMS,YAAO,GAAG,KAAK,CAAA;GA2CvB;EAtCA,iBAAiB;IAChB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,IAAI,CAAA;GAC5B;EAGD,kBAAkB,CAAC,KAA6D;IAC/E,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAA;IACjD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,WAAW,CAAC,KAAK,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,WAAW,CAAC,IAAI,GAAG,KAAK,GAAG,IAAI,CAAA;GAClH;EAED,MAAM,YAAY,CAAC,KAAY;IAC9B,KAAK,CAAC,cAAc,EAAE,CAAA;IACtB,KAAK,CAAC,eAAe,EAAE,CAAA;IACvB,MAAM,IAAI,GAAG,MAAM,CAAC,WAAW,CAAC,IAAI,QAAQ,CAAC,KAAK,CAAC,MAAyB,CAAC,CAAC,CAAA;IAC9E,IAAI,CAACA,IAAsB,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC;MACxC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAA;SAC5C,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,WAAW,CAAC,KAAK,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC;MAC/F,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,wBAAwB,CAAC,CAAC,CAAA;SACnD;MACJ,MAAM,QAAQ,GAAG,MAAM,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,EAAE,IAAI,CAAC,CAAA;MACvD,IAAIC,KAAa,CAAC,EAAE,CAAC,QAAQ,CAAC;QAC7B,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAA;KAC7C;GACD;EAED,MAAM;IACL,QACC,gBACC,sBAAgB,IAAI,EAAC,OAAO,EAAC,IAAI,EAAC,MAAM,IACtC,IAAI,CAAC,IAAI,CAAC,KAAK,CACA,EACjB,sBAAgB,IAAI,EAAC,MAAM,EAAC,IAAI,EAAC,MAAM,IACrC,IAAI,CAAC,IAAI,CAAC,IAAI,CACC,EACjB,uBAAiB,QAAQ,EAAE,CAAC,IAAI,CAAC,OAAO,kBAA+B,CACjE,EACP;GACD;;;;;;","names":["model.userwidgets.User","gracely.Error"],"sources":["./src/components/user/change-name/style.css?tag=userwidgets-change-name&encapsulation=scoped","./src/components/user/change-name/index.tsx"],"sourcesContent":["","import { Component, Event, EventEmitter, h, Listen, Prop } from \"@stencil/core\"\nimport * as gracely from \"gracely\"\nimport { Notice } from \"smoothly\"\nimport { client } from \"../../../client\"\nimport { model } from \"../../../model\"\n\n@Component({\n\ttag: \"userwidgets-change-name\",\n\tstyleUrl: \"style.css\",\n\tscoped: true,\n})\nexport class ChangeName {\n\tprivate changed = false\n\tprivate initialName: model.userwidgets.User.Name\n\t@Event() notice: EventEmitter<Notice>\n\t@Prop() name: model.userwidgets.User.Name\n\n\tconnectedCallback() {\n\t\tthis.initialName = this.name\n\t}\n\n\t@Listen(\"smoothlyChanged\")\n\thandleInputChanged(event: CustomEvent<{ name: \"first\" | \"last\"; value: string }>) {\n\t\tthis.name[event.detail.name] = event.detail.value\n\t\tthis.changed = this.name.first == this.initialName.first && this.name.last == this.initialName.last ? false : true\n\t}\n\t@Listen(\"submit\")\n\tasync handleSubmit(event: Event) {\n\t\tevent.preventDefault()\n\t\tevent.stopPropagation()\n\t\tconst name = Object.fromEntries(new FormData(event.target as HTMLFormElement))\n\t\tif (!model.userwidgets.User.Name.is(name))\n\t\t\tthis.notice.emit(Notice.warn(\"Missing fields.\"))\n\t\telse if (!(this.name.first == this.initialName.first && this.name.last == this.initialName.last))\n\t\t\tthis.notice.emit(Notice.warn(\"Names are not changed.\"))\n\t\telse {\n\t\t\tconst response = await client.user.changeName(\"\", name)\n\t\t\tif (gracely.Error.is(response))\n\t\t\t\tthis.notice.emit(Notice.warn(response.body))\n\t\t}\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<form>\n\t\t\t\t<smoothly-input name=\"first\" type=\"text\">\n\t\t\t\t\t{this.name.first}\n\t\t\t\t</smoothly-input>\n\t\t\t\t<smoothly-input name=\"last\" type=\"text\">\n\t\t\t\t\t{this.name.last}\n\t\t\t\t</smoothly-input>\n\t\t\t\t<smoothly-submit disabled={!this.changed}>Change name</smoothly-submit>\n\t\t\t</form>\n\t\t)\n\t}\n}\n"],"version":3}