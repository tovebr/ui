{"file":"smoothly-radio.entry.esm.js","mappings":";;AAAA,MAAM,QAAQ,GAAG,ysBAAysB;;MCC7sB,aAAa;;;;;EACxB,MAAM,OAAO,CAAC,CAAC;IACb,IAAI,CAAC,CAAC,MAAM,IAAI,CAAC,CAAC,MAAM,CAAC,KAAK,KAAK,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC;MACjE,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC;IACrE,OAAO,IAAI,CAAC;GACb;EACD,MAAM;IACJ,OAAO;MACL,CAAC,CAAC,OAAO,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,EAAE,EAAE,IAAI,CAAC,KAAK,EAAE,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE,QAAQ,EAAE,CAAC,IAAI,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC;MACjK,CAAC,CAAC,OAAO,EAAE,EAAE,OAAO,EAAE,IAAI,CAAC,KAAK,EAAE,EAChC,CAAC,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;KACnB,CAAC;GACH;;;;;;","names":[],"sources":["./node_modules/smoothly/dist/collection/components/radio/style.css?tag=smoothly-radio&encapsulation=scoped","./node_modules/smoothly/dist/collection/components/radio/index.js"],"sourcesContent":[":host {\n\tdisplay: block;\n\tposition: relative;\n}\n:host[hidden] {\n\tdisplay: none;\n}\nlabel {\n\tdisplay: block;\n\twidth: calc(100% - 2 * 0.4em);\n\tpadding: 0.2em 0.4em 0.2em 0.4em;\n}\ninput[type=radio] {\n\tposition: absolute;\n\tleft: 0;\n\ttop: 0;\n\twidth: calc(100%);\n\theight: 100%;\n\tmargin: 0;\n\tappearance: none;\n\t-webkit-appearance: none;\n}\ninput[type=radio] ~ label {\n\tborder: 1px solid rgb(var(--smoothly-default-color));\n\tcolor: rgba(var(--smoothly-default-contrast), 0.5);\n\tbackground: rgb(var(--smoothly-default-color));\n}\ninput[type=radio]:checked ~ label {\n\tbackground-color: rgb(var(--smoothly-default-shade));\n\tcolor: rgb(var(--smoothly-default-contrast));\n}\n","import { Component, Event, h, Prop } from \"@stencil/core\";\nexport class SmoothlyRadio {\n  async onInput(e) {\n    if (e.target && e.target.value && (this.checked = e.target.checked))\n      this.smoothlySelected.emit({ name: this.name, value: this.value });\n    return true;\n  }\n  render() {\n    return [\n      h(\"input\", { type: \"radio\", name: this.name, id: this.value, tabindex: this.tabIndex, checked: this.checked, value: this.value, onChange: e => this.onInput(e) }),\n      h(\"label\", { htmlFor: this.value },\n        h(\"slot\", null)),\n    ];\n  }\n  static get is() { return \"smoothly-radio\"; }\n  static get encapsulation() { return \"scoped\"; }\n  static get originalStyleUrls() { return {\n    \"$\": [\"style.css\"]\n  }; }\n  static get styleUrls() { return {\n    \"$\": [\"style.css\"]\n  }; }\n  static get properties() { return {\n    \"name\": {\n      \"type\": \"string\",\n      \"mutable\": false,\n      \"complexType\": {\n        \"original\": \"string\",\n        \"resolved\": \"string\",\n        \"references\": {}\n      },\n      \"required\": false,\n      \"optional\": false,\n      \"docs\": {\n        \"tags\": [],\n        \"text\": \"\"\n      },\n      \"attribute\": \"name\",\n      \"reflect\": false\n    },\n    \"value\": {\n      \"type\": \"string\",\n      \"mutable\": false,\n      \"complexType\": {\n        \"original\": \"string\",\n        \"resolved\": \"string\",\n        \"references\": {}\n      },\n      \"required\": false,\n      \"optional\": false,\n      \"docs\": {\n        \"tags\": [],\n        \"text\": \"\"\n      },\n      \"attribute\": \"value\",\n      \"reflect\": false\n    },\n    \"checked\": {\n      \"type\": \"boolean\",\n      \"mutable\": true,\n      \"complexType\": {\n        \"original\": \"boolean\",\n        \"resolved\": \"boolean\",\n        \"references\": {}\n      },\n      \"required\": false,\n      \"optional\": false,\n      \"docs\": {\n        \"tags\": [],\n        \"text\": \"\"\n      },\n      \"attribute\": \"checked\",\n      \"reflect\": true\n    },\n    \"tabIndex\": {\n      \"type\": \"number\",\n      \"mutable\": false,\n      \"complexType\": {\n        \"original\": \"number\",\n        \"resolved\": \"number\",\n        \"references\": {}\n      },\n      \"required\": false,\n      \"optional\": false,\n      \"docs\": {\n        \"tags\": [],\n        \"text\": \"\"\n      },\n      \"attribute\": \"tab-index\",\n      \"reflect\": false\n    }\n  }; }\n  static get events() { return [{\n      \"method\": \"smoothlySelected\",\n      \"name\": \"smoothlySelected\",\n      \"bubbles\": true,\n      \"cancelable\": true,\n      \"composed\": true,\n      \"docs\": {\n        \"tags\": [],\n        \"text\": \"\"\n      },\n      \"complexType\": {\n        \"original\": \"{ name: string; value: string }\",\n        \"resolved\": \"{ name: string; value: string; }\",\n        \"references\": {}\n      }\n    }]; }\n}\n"],"version":3}